---
import Layout from '../layouts/Layout.astro'
import { questionsSet2a, questionsSet2b } from '../data/questions'
---

<Layout title="診断ページ 2/3">
  <div class="max-w-4xl mx-auto">
    <div class="bg-white rounded-lg shadow-lg p-8">
      <h1 class="text-3xl font-bold text-center mb-2 text-gray-800">
        診断ページ 2/3
      </h1>
      <p class="text-center text-gray-600 mb-8">
        次の選択肢の中から一つ選んでください。
      </p>

      <form id="test2Form" class="space-y-8">
        <div id="questionsContainer">
          <!-- 質問はJavaScriptで動的に挿入 -->
        </div>

        <div class="text-center mt-8">
          <button
            type="submit"
            class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-8 rounded-lg transition duration-300 shadow-md"
          >
            次のページへ
          </button>
        </div>
      </form>
    </div>
  </div>
</Layout>

<script>
  import { getStageData, saveStageData, calculateScore } from '../scripts/diagnosis-client'
  import { questionsSet2a, questionsSet2b } from '../data/questions'

  // 第1段階のデータを取得
  const stage1Data = getStageData(1)
  if (!stage1Data) {
    window.location.href = '/test'
  }

  const isGeneral = stage1Data!.score < 25
  const questions = isGeneral ? questionsSet2a : questionsSet2b

  // タイトルを更新
  const titleElement = document.querySelector('h1')!
  titleElement.textContent = isGeneral ? '診断ページ 2/3（一般人）' : '診断ページ 2/3（文豪）'

  // 質問を動的に生成
  const container = document.getElementById('questionsContainer')!
  questions.forEach((question, index) => {
    const questionHtml = `
      <div class="bg-gray-50 rounded-lg p-6">
        <h2 class="text-lg font-semibold mb-4 text-gray-800">
          問題${index + 1}: ${question.text}
        </h2>
        <div class="space-y-3">
          ${question.options.map(option => `
            <label class="flex items-start space-x-3 cursor-pointer hover:bg-gray-100 p-3 rounded transition duration-200">
              <input
                type="radio"
                name="${question.id}"
                value="${option.value}"
                required
                class="mt-1 text-blue-600 focus:ring-blue-500"
              />
              <span class="text-gray-700 leading-relaxed">
                ${option.text}
              </span>
            </label>
          `).join('')}
        </div>
      </div>
    `
    container.insertAdjacentHTML('beforeend', questionHtml)
  })

  // フォーム送信処理
  const form = document.getElementById('test2Form') as HTMLFormElement
  form.addEventListener('submit', (e) => {
    e.preventDefault()
    
    const formData = new FormData(form)
    const score = calculateScore(formData, questions.map(q => q.id))
    
    saveStageData(2, {
      score,
      isGeneral,
      answers: Object.fromEntries(formData)
    })
    
    window.location.href = '/test3'
  })
</script>
