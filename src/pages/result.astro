---
import Layout from '../layouts/Layout.astro'
---

<Layout title="診断結果">
  <div class="max-w-4xl mx-auto">
    <div class="bg-white rounded-lg shadow-lg p-8 text-center">
      <h1 class="text-4xl font-bold mb-4 text-gray-800">
        診断結果
      </h1>

      <!-- ローディングスピナー -->
      <div id="loadingSpinner" class="text-center py-8">
        <div class="inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600"></div>
        <p class="mt-4 text-gray-600">診断結果を計算中...</p>
      </div>

      <!-- メインコンテンツ -->
      <div id="mainContent" class="hidden smooth-transition">
        <div id="resultCard" class="bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-lg p-8 mb-8">
          <!-- 結果はJavaScriptで動的に挿入 -->
        </div>

        <div id="descriptionCard" class="bg-gray-50 rounded-lg p-6 mb-8 text-left">
          <!-- 説明はJavaScriptで動的に挿入 -->
        </div>
      </div>

      <div class="flex flex-col sm:flex-row gap-4 justify-center">
        <a href="/" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded-lg transition duration-300 shadow-md">
          もう一度診断する
        </a>
        <a href="/list" class="bg-gray-600 hover:bg-gray-700 text-white font-bold py-3 px-6 rounded-lg transition duration-300 shadow-md">
          他の文豪を見る
        </a>
        <a id="detailLink" href="#" class="bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-6 rounded-lg transition duration-300 shadow-md">
          詳細を見る
        </a>
      </div>

      <div class="mt-8 p-4 bg-yellow-50 rounded-lg">
        <p class="text-sm text-gray-600">
          この診断は娯楽目的のものです。実際の性格や才能を保証するものではありません。
        </p>
      </div>
    </div>
  </div>
</Layout>

<script>
  import { getStageData, clearDiagnosisData } from '../scripts/diagnosis-client'
  import { authors } from '../data/authors'
  import { diagnose, type Stage3Answers } from '../utils/diagnosis'

  // 各段階のデータを取得
  const stage3Data = getStageData(3)

  if (!stage3Data) {
    window.location.href = '/test'
  }

  // 個別回答をStage3Answers形式に変換
  const stage3Answers: Stage3Answers = {
    ques1: stage3Data!.answers?.ques1?.toString(),
    ques2: stage3Data!.answers?.ques2?.toString(),
    ques3: stage3Data!.answers?.ques3?.toString(),
    ques4: stage3Data!.answers?.ques4?.toString(),
    ques5: stage3Data!.answers?.ques5?.toString()
  }

  // 診断を実行（個別質問による判定も含む）
  const authorId = diagnose(
    stage3Data!.stage1Score,
    stage3Data!.stage2Score,
    stage3Data!.score,
    stage3Data!.isGeneral,
    stage3Answers
  )

  const author = authors.find(a => a.id === authorId) || authors[0]

  // タイトルを更新
  document.title = `診断結果: ${author.name}`

  // 結果カードを表示
  const resultCard = document.getElementById('resultCard')!
  resultCard.innerHTML = `
    <h2 class="text-3xl font-bold mb-2">
      ${author.name}
    </h2>
    <p class="text-xl">
      ${author.type}
    </p>
  `

  // 説明カードを表示
  const descriptionCard = document.getElementById('descriptionCard')!
  descriptionCard.innerHTML = `
    <h3 class="text-xl font-semibold mb-4 text-gray-800">
      ${author.name}について
    </h3>
    <p class="text-gray-700 leading-relaxed">
      ${author.description || `${author.name}は${author.type}として知られています。詳細な性格分析は準備中です。`}
    </p>
  `

  // 詳細リンクを設定
  const detailLink = document.getElementById('detailLink') as HTMLAnchorElement
  detailLink.href = `/authors/${author.id}`

  // ローディング完了後にコンテンツを表示
  const loadingSpinner = document.getElementById('loadingSpinner')!
  const mainContent = document.getElementById('mainContent')!

  setTimeout(() => {
    loadingSpinner.classList.add('hidden')
    mainContent.classList.remove('hidden')
    mainContent.classList.add('fade-in')
  }, 300) // 結果計算の演出のため少し長めの遅延

  // 診断データをクリア（次回の診断のため）
  clearDiagnosisData()
</script>
